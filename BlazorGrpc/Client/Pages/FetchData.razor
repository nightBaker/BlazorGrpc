@page "/fetchdata"
@using Grpc.Net.Client
@inject GrpcChannel Channel
@using Weather
@using Google.Protobuf.WellKnownTypes

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (forecasts == null)
{
<p><em>Loading...</em></p> }
else
{
<table class="table">
    <thead>
        <tr>
            <th>Date</th>
            <th>Temp. (C)</th>
            <th>Temp. (F)</th>
            <th>Summary</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var forecast in forecasts)
        {
<tr>
    <td>@forecast.Date.ToDateTime().ToShortDateString()</td>
    <td>@forecast.TemperatureC</td>
    <td>@( 32 + (int)(forecast.TemperatureC / 0.5556))</td>
    <td>@forecast.Summary</td>
</tr>}
    </tbody>
</table>}

@code { private IList<WeatherForecast> forecasts;

    protected override async Task OnInitializedAsync()
    {
        var client = new WeatherForecasts.WeatherForecastsClient(Channel);
        forecasts = (await client.GetWeatherForecastsAsync(new Empty())).Forecasts;
    } }
